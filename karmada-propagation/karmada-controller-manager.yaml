apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "8"
  creationTimestamp: "2025-09-29T10:01:28Z"
  generation: 8
  labels:
    karmada.io/bootstrapping: app-defaults
  name: karmada-controller-manager
  namespace: karmada-system
  resourceVersion: "2041971"
  uid: 61d80969-fedb-42c7-a35a-8a405f3b6fe6
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: karmada-controller-manager
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/restartedAt: "2025-10-16T10:11:47Z"
      creationTimestamp: null
      labels:
        app: karmada-controller-manager
      name: karmada-controller-manager
      namespace: karmada-system
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - karmada-controller-manager
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - command:
        - /bin/karmada-controller-manager
        - --kubeconfig=/etc/karmada/config/karmada.config
        - --metrics-bind-address=$(POD_IP):8080
        - --health-probe-bind-address=$(POD_IP):10357
        - --cluster-status-update-frequency=10s
        - --leader-elect-resource-namespace=karmada-system
        - --v=4
        - --controllers=propagation,work,cluster,execution
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        image: docker.io/karmada/karmada-controller-manager:v1.15.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10357
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 5
        name: karmada-controller-manager
        ports:
        - containerPort: 10357
          name: server
          protocol: TCP
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/karmada/config
          name: karmada-config
          readOnly: true
      dnsPolicy: ClusterFirst
      priorityClassName: system-node-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoExecute
        operator: Exists
      volumes:
      - name: karmada-config
        secret:
          defaultMode: 420
          secretName: karmada-controller-manager-config
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2025-10-17T10:47:34Z"
    lastUpdateTime: "2025-10-17T10:47:34Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2025-10-17T10:47:33Z"
    lastUpdateTime: "2025-10-17T10:47:34Z"
    message: ReplicaSet "karmada-controller-manager-756f74c8d5" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 8
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
